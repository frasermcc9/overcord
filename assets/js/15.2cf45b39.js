(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{366:function(e,a,t){"use strict";t.r(a);var r=t(45),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"built-in-command-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#built-in-command-methods"}},[e._v("#")]),e._v(" Built-in Command Methods")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#built-in-command-methods"}},[e._v("Built-in Command Methods")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#non-overrideable-methods"}},[e._v("Non-Overrideable Methods")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#awaitreply"}},[e._v("awaitReply")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#say"}},[e._v("say")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#codifysay"}},[e._v("codifySay")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#printarraychunks"}},[e._v("printArrayChunks")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#overrideable-methods"}},[e._v("Overrideable Methods")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#execute"}},[e._v("execute")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#log"}},[e._v("log")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#error"}},[e._v("error")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#commanddidexecute"}},[e._v("commandDidExecute")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#commandshouldexecute"}},[e._v("commandShouldExecute")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#commanddidnotexecute"}},[e._v("commandDidNotExecute")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#commandwillshowhelp"}},[e._v("commandWillShowHelp")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#commanddidinhibit"}},[e._v("commandDidInhibit")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#commanddidblock"}},[e._v("commandDidBlock")])])])])])])]),e._v(" "),t("p",[e._v("The command class has a number of built-in helper methods to help reduce boilerplate code for common patterns. These come into two categories:")]),e._v(" "),t("ul",[t("li",[e._v("Overrideable")]),e._v(" "),t("li",[e._v("Non-overrideable")])]),e._v(" "),t("p",[e._v("The non-overrideable methods are helper methods to help with commonly used commands. The overrideable methods are often hooks that are called at different parts of the commands execution flow.")]),e._v(" "),t("h2",{attrs:{id:"non-overrideable-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#non-overrideable-methods"}},[e._v("#")]),e._v(" Non-Overrideable Methods")]),e._v(" "),t("h3",{attrs:{id:"awaitreply"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#awaitreply"}},[e._v("#")]),e._v(" awaitReply")]),e._v(" "),t("p",[e._v("Asynchronously wait for the command invoker to reply, and return their message.")]),e._v(" "),t("h3",{attrs:{id:"say"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#say"}},[e._v("#")]),e._v(" say")]),e._v(" "),t("p",[e._v("A shortcut to send a message to the channel the command was invoked in. Also directly supports MessageEmbeds.")]),e._v(" "),t("h3",{attrs:{id:"codifysay"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#codifysay"}},[e._v("#")]),e._v(" codifySay")]),e._v(" "),t("p",[e._v("A shortcut to send a message in code-markdown format.")]),e._v(" "),t("h3",{attrs:{id:"printarraychunks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#printarraychunks"}},[e._v("#")]),e._v(" printArrayChunks")]),e._v(" "),t("p",[e._v("A method to send an array in a channel. It will also split the array into multiple messages, if the character limit is exceeded.")]),e._v(" "),t("h2",{attrs:{id:"overrideable-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overrideable-methods"}},[e._v("#")]),e._v(" Overrideable Methods")]),e._v(" "),t("h3",{attrs:{id:"execute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#execute"}},[e._v("#")]),e._v(" execute")]),e._v(" "),t("p",[e._v("This is abstract, so must be overridden. This is what gets executed if your command is allowed to!")]),e._v(" "),t("h3",{attrs:{id:"log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[e._v("#")]),e._v(" log")]),e._v(" "),t("p",[e._v("Logs a successful execution.")]),e._v(" "),t("h3",{attrs:{id:"error"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[e._v("#")]),e._v(" error")]),e._v(" "),t("p",[e._v("Standard error handler. You should call this when theres an error in your command. Throwing will also move execution to this method.")]),e._v(" "),t("h3",{attrs:{id:"commanddidexecute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commanddidexecute"}},[e._v("#")]),e._v(" commandDidExecute")]),e._v(" "),t("p",[e._v("Called after the command executes.")]),e._v(" "),t("h3",{attrs:{id:"commandshouldexecute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commandshouldexecute"}},[e._v("#")]),e._v(" commandShouldExecute")]),e._v(" "),t("p",[e._v("Called when the command is likely going to execute. Override this if you want to do some custom checks to see if the command should run or not.")]),e._v(" "),t("h3",{attrs:{id:"commanddidnotexecute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commanddidnotexecute"}},[e._v("#")]),e._v(" commandDidNotExecute")]),e._v(" "),t("p",[e._v("Called when commandShouldExecute fails.")]),e._v(" "),t("h3",{attrs:{id:"commandwillshowhelp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commandwillshowhelp"}},[e._v("#")]),e._v(" commandWillShowHelp")]),e._v(" "),t("p",[e._v("Called when an error occurs with the arguments provided by the user for the comand.")]),e._v(" "),t("h3",{attrs:{id:"commanddidinhibit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commanddidinhibit"}},[e._v("#")]),e._v(" commandDidInhibit")]),e._v(" "),t("p",[e._v("Called when the inhibitor blocks command execution.")]),e._v(" "),t("h3",{attrs:{id:"commanddidblock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commanddidblock"}},[e._v("#")]),e._v(" commandDidBlock")]),e._v(" "),t("p",[e._v("Called when the permission manager blocks command execution.")])])}),[],!1,null,null,null);a.default=o.exports}}]);